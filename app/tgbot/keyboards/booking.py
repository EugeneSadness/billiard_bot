from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from app.infrastructure.database.models.booking import Booking
from app.tgbot.utils.date_helpers import format_date_with_weekday

def get_main_menu_inline_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.button(
        text="–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫ üé±",
        callback_data="start_booking"
    )
    builder.button(
        text="–ú–æ–∏ –±—Ä–æ–Ω–∏ üìÖ",
        callback_data="my_bookings"
    )
    builder.button(
        text="–û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω—å ‚ùå",
        callback_data="cancel_booking"
    )
    builder.button(
        text="–ö–∞–∫ –ø—Ä–æ–π—Ç–∏ –∫ –Ω–∞–º üó∫Ô∏è",
        callback_data="how_to_find_us"
    )
    builder.button(
        text="–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ‚ÑπÔ∏è",
        callback_data="contact_info"
    )
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥
    return builder.as_markup()

def get_dates_keyboard(available_dates: list, is_admin: bool = False) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    
    for date in available_dates:
        date_str = date['date'][:5]
        _, weekday_ru = format_date_with_weekday(date['date'])
        
        builder.button(
            text=f"{date_str} ({weekday_ru.capitalize()})",
            callback_data=f"date_{date['date']}"
        )
    
    builder.button(
        text="¬´ –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
        callback_data="back_to_main"
    )
    
    builder.adjust(2)
    return builder.as_markup()

def sort_time(time: str) -> int:
    """
    –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–∏.
    –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç—ã, –ø—Ä–∏ —ç—Ç–æ–º –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ –ø–æ–ª—É–Ω–æ—á–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç 24 —á–∞—Å–∞
    """
    hour = int(time.split(':')[0])
    # –ï—Å–ª–∏ —á–∞—Å –º–µ–∂–¥—É 0 –∏ 3, –¥–æ–±–∞–≤–ª—è–µ–º 24 —á–∞—Å–∞ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    if 0 <= hour <= 3:
        hour += 24
    return hour

def get_time_keyboard(available_times: list, is_admin: bool = False) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    
    sorted_times = sorted(available_times, key=sort_time)
    
    for time in sorted_times:
        builder.button(
            text=f"{time}",
            callback_data=f"time:{time}"
        )
    
    builder.button(
        text="¬´ –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –¥–∞—Ç—ã",
        callback_data="back_to_dates"
    )
    
    builder.adjust(3)
    return builder.as_markup()

def get_end_time_keyboard(available_end_times: list[str], is_admin: bool = False) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    
    sorted_times = sorted(available_end_times, key=sort_time)
    
    for time in sorted_times:
        builder.button(
            text=f"{time}",
            callback_data=f"end_time:{time}"
        )
    
    builder.button(
        text="¬´ –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –≤—Ä–µ–º–µ–Ω–∏",
        callback_data="back_to_start_time"
    )
    
    builder.adjust(3)
    return builder.as_markup()

def get_cancel_booking_keyboard(bookings: list[Booking], is_admin: bool = False) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    
    for booking in bookings:
        date_str, weekday_ru = format_date_with_weekday(booking.booking_date.strftime('%d.%m.%y'))
        button_text = (
            f"{date_str} ({weekday_ru}) "
            f"{booking.start_time.strftime('%H:%M')}-{booking.end_time.strftime('%H:%M')}"
        )
        builder.button(
            text=button_text,
            callback_data=f"cancel_booking:{booking.id}"
        )
    
    builder.button(
        text="¬´ –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
        callback_data="back_to_main"
    )
    
    builder.adjust(1)
    return builder.as_markup()

def get_admin_menu_inline_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.button(
        text="–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫ üé±",
        callback_data="start_booking"
    )
    builder.button(
        text="–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–µ–Ω—å üö´",
        callback_data="block_day"
    )
    builder.button(
        text="–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–µ–Ω—å üîì",
        callback_data="unblock_day"
    )
    builder.button(
        text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–æ–Ω—è–º–∏ üë•",
        callback_data="manage_bookings"
    )
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥
    return builder.as_markup()

def get_all_bookings_keyboard(bookings: list[Booking]) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    
    for booking in bookings:
        date_str, weekday_ru = format_date_with_weekday(booking.booking_date.strftime('%d.%m.%y'))
        
        button_text = (
            f"{booking.client_name} {date_str}\n"
            f"{booking.start_time.strftime('%H:%M')}-{booking.end_time.strftime('%H:%M')}"
        )
        builder.button(
            text=button_text,
            callback_data=f"admin_cancel:{booking.id}"
        )
    
    builder.button(
        text="¬´ –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
        callback_data="back_to_main"
    )
    
    builder.adjust(1)
    return builder.as_markup()

def get_back_to_admin_menu_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.button(
        text="¬´ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—é",
        callback_data="back_to_main"
    )
    builder.adjust(1)
    return builder.as_markup()

def get_table_preference_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    
    # –ü–æ—Ä—è–¥–æ–∫ –∫–Ω–æ–ø–æ–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    builder.button(
        text="–õ—é–±–æ–π —Å—Ç–æ–ª üé±",
        callback_data="table_pref:random"
    )
    builder.button(
        text="–ö—Ä–∞—Å–Ω—ã–π —Å—Ç–æ–ª ‚ù§Ô∏è",
        callback_data="table_pref:4"
    )
    builder.button(
        text="–ó–µ–ª—ë–Ω—ã–π —Å—Ç–æ–ª üíö",
        callback_data="table_pref:3"
    )
    builder.button(
        text="–õ–µ–æ–ø–∞—Ä–¥–æ–≤—ã–π —Å—Ç–æ–ª üêÜ",
        callback_data="table_pref:1"
    )
    builder.button(
        text="–°–∏–Ω–∏–π —Å—Ç–æ–ª üíô",
        callback_data="table_pref:2"
    )
    
    builder.button(
        text="¬´ –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –¥–∞—Ç—ã",
        callback_data="back_to_dates"
    )
    
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥
    return builder.as_markup() 